@using System.Drawing
@using System.ComponentModel
@using System.Numerics
@using FrEee.Extensions
@using Excubo.Blazor.Canvas
@inherits ViewBase<GalaxyMapViewModel>

<div>
	<div class="fill">
		<ImageDisplay VM="@VM.BackgroundImageVM" />
	</div>
	<div class="zoom overlay" style="aspect-ratio: @(VM.AspectRatio)">
		<Canvas @ref="helper_canvas" class="zoom" width="@VM.ScaledWidth" height="@VM.ScaledHeight"/>
	</div>
	<div class="zoom overlay2" style="aspect-ratio: @(VM.AspectRatio); display: grid">
		@for (var x = VM.MinX; x <= VM.MaxX; x++)
		{
			for (var y = VM.MinY; y <= VM.MaxY; y++)
			{
				var sysloc = VM.StarSystemLocations
					.SingleOrDefault(q => q.Location.X == x && q.Location.Y == y);
				var row = y - VM.MinY + 1;
				var col = x - VM.MinX + 1;
				if (sysloc is not null)
				{
					// system pie
					string border = "1px solid black";
					if (sysloc.Item == VM.SelectedStarSystem)
					{
						// making the border thicker breaks the layout for some reason
						border = "1px solid white";
					}
					<div style="grid-row: @row; grid-column: @col; width: 1fr; height: 1fr; aspect-ratio: 1; border: @border">
						<PieChart T="int" VM="@(VM.Mode.GetStarSystemViewModel(sysloc.Item, VM.StarSystemClicked))" />
					</div>
				}
				else
				{
					// placeholder
					<div style="grid-row: @row; grid-column: @col; width: 1fr; height: 1fr; aspect-ratio: 1; border: 1px dotted #00ff0044" />
				}
			}
		}
	</div>
</div>